{"ast":null,"code":"import _objectSpread from \"/Users/josephreilly/Documents/Development/4th-mod/practice/sticker-mania/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id == cartItemToRemove.id);\n\n  if (existingCartItem.quantity == 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n};","map":{"version":3,"sources":["/Users/josephreilly/Documents/Development/4th-mod/practice/sticker-mania/src/Redux/Cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":";AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADnB,CAAzB;;AAGE,MAAGH,gBAAH,EAAqB;AACnB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACMD,QADN;AACgBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD9C,SAEEH,QAHG,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAmBC,aAAnB;AAAkCM,IAAAA,QAAQ,EAAE;AAA5C,KAAP;AACH,CAbM;AAeP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AACjE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeI,gBAAgB,CAACJ,EADrB,CAAzB;;AAIA,MAAGH,gBAAgB,CAACK,QAAjB,IAA6B,CAAhC,EAAmC;AACjC,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACD;AACF,CARM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id );\n\n    if(existingCartItem) {\n      return cartItems.map(cartItem =>\n        cartItem.id === cartItemToAdd.id\n        ? {...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n      )\n    }\n\n    return [...cartItems, {...cartItemToAdd, quantity: 1 }]\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id == cartItemToRemove.id\n  )\n\n  if(existingCartItem.quantity == 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}